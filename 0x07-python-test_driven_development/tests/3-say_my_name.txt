Test cases for 3-say_my_name module
===================================

The 3-say_my_name is take two arguments are string and returns tht say_my_name

Usage
=======
prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Smith")
    My name is Beta John Smith

    The parameter ```last_name``` is optional. If no last name is provided,
    an empty string is printed instead.
::
    >>> say_my_name("Beta")
    My name is Beta

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(8, "James")
    Traceback (most recent call last):
    TypeError: first_name must be a string
::
>>> say_my_name("MeCalister", ["tef", "Bart", "Heart"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"LeBron": 8, "Lams": 323}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

>>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
